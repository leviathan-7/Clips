(deftemplate message
	(slot str)
	(slot priorites)
)
(defrule R1 
	(food (is 1)(id 1 )(name ?name0)(priorites ?priorites0))
	?n<- (food (id 3  ))
   (food (id 3  )(is ?is_ )(name ?nn)(priorites ?pp))
	=>
   (bind ?pr ?priorites0)
	(if (and (= ?is_ 1) (> ?pr ?pp))
	then
	(modify ?n (priorites ?pr))
   (assert (message (str ?nn)(priorites ?pr)))
   )
	(if (= ?is_ 0)
	then
	(modify ?n (is 1 ))
	(modify ?n (priorites ?pr))
   (assert (message (str ?nn)(priorites ?pr)))
   )
)
(defrule R2 
	(food (is 1)(id 2 )(name ?name0)(priorites ?priorites0))
	(food (is 1)(id 6 )(name ?name1)(priorites ?priorites1))
	?n<- (food (id 24  ))
   (food (id 24  )(is ?is_ )(name ?nn)(priorites ?pp))
	=>
   (bind ?pr ?priorites0)
   (bind ?pr (- (+ ?pr ?priorites1) (* ?pr ?priorites1)))
	(if (and (= ?is_ 1) (> ?pr ?pp))
	then
	(modify ?n (priorites ?pr))
   (assert (message (str ?nn)(priorites ?pr)))
   )
	(if (= ?is_ 0)
	then
	(modify ?n (is 1 ))
	(modify ?n (priorites ?pr))
   (assert (message (str ?nn)(priorites ?pr)))
   )
)
(defrule R3 
	(food (is 1)(id 4 )(name ?name0)(priorites ?priorites0))
	?n<- (food (id 21  ))
   (food (id 21  )(is ?is_ )(name ?nn)(priorites ?pp))
	=>
   (bind ?pr ?priorites0)
	(if (and (= ?is_ 1) (> ?pr ?pp))
	then
	(modify ?n (priorites ?pr))
   (assert (message (str ?nn)(priorites ?pr)))
   )
	(if (= ?is_ 0)
	then
	(modify ?n (is 1 ))
	(modify ?n (priorites ?pr))
   (assert (message (str ?nn)(priorites ?pr)))
   )
)
(defrule R4 
	(food (is 1)(id 21 )(name ?name0)(priorites ?priorites0))
	(food (is 1)(id 3 )(name ?name1)(priorites ?priorites1))
	?n<- (food (id 22  ))
   (food (id 22  )(is ?is_ )(name ?nn)(priorites ?pp))
	=>
   (bind ?pr ?priorites0)
   (bind ?pr (- (+ ?pr ?priorites1) (* ?pr ?priorites1)))
	(if (and (= ?is_ 1) (> ?pr ?pp))
	then
	(modify ?n (priorites ?pr))
   (assert (message (str ?nn)(priorites ?pr)))
   )
	(if (= ?is_ 0)
	then
	(modify ?n (is 1 ))
	(modify ?n (priorites ?pr))
   (assert (message (str ?nn)(priorites ?pr)))
   )
)
(defrule R5 
	(food (is 1)(id 8 )(name ?name0)(priorites ?priorites0))
	?n<- (food (id 7  ))
   (food (id 7  )(is ?is_ )(name ?nn)(priorites ?pp))
	=>
   (bind ?pr ?priorites0)
	(if (and (= ?is_ 1) (> ?pr ?pp))
	then
	(modify ?n (priorites ?pr))
   (assert (message (str ?nn)(priorites ?pr)))
   )
	(if (= ?is_ 0)
	then
	(modify ?n (is 1 ))
	(modify ?n (priorites ?pr))
   (assert (message (str ?nn)(priorites ?pr)))
   )
)
(defrule R6 
	(food (is 1)(id 19 )(name ?name0)(priorites ?priorites0))
	?n<- (food (id 7  ))
   (food (id 7  )(is ?is_ )(name ?nn)(priorites ?pp))
	=>
   (bind ?pr ?priorites0)
	(if (and (= ?is_ 1) (> ?pr ?pp))
	then
	(modify ?n (priorites ?pr))
   (assert (message (str ?nn)(priorites ?pr)))
   )
	(if (= ?is_ 0)
	then
	(modify ?n (is 1 ))
	(modify ?n (priorites ?pr))
   (assert (message (str ?nn)(priorites ?pr)))
   )
)
(defrule R7 
	(food (is 1)(id 18 )(name ?name0)(priorites ?priorites0))
	?n<- (food (id 27  ))
   (food (id 27  )(is ?is_ )(name ?nn)(priorites ?pp))
	=>
   (bind ?pr ?priorites0)
	(if (and (= ?is_ 1) (> ?pr ?pp))
	then
	(modify ?n (priorites ?pr))
   (assert (message (str ?nn)(priorites ?pr)))
   )
	(if (= ?is_ 0)
	then
	(modify ?n (is 1 ))
	(modify ?n (priorites ?pr))
   (assert (message (str ?nn)(priorites ?pr)))
   )
)
(defrule R8 
	(food (is 1)(id 9 )(name ?name0)(priorites ?priorites0))
	(food (is 1)(id 16 )(name ?name1)(priorites ?priorites1))
	(food (is 1)(id 17 )(name ?name2)(priorites ?priorites2))
	(food (is 1)(id 23 )(name ?name3)(priorites ?priorites3))
	(food (is 1)(id 27 )(name ?name4)(priorites ?priorites4))
	?n<- (food (id 15  ))
   (food (id 15  )(is ?is_ )(name ?nn)(priorites ?pp))
	=>
   (bind ?pr ?priorites0)
   (bind ?pr (- (+ ?pr ?priorites1) (* ?pr ?priorites1)))
   (bind ?pr (- (+ ?pr ?priorites2) (* ?pr ?priorites2)))
   (bind ?pr (- (+ ?pr ?priorites3) (* ?pr ?priorites3)))
   (bind ?pr (- (+ ?pr ?priorites4) (* ?pr ?priorites4)))
	(if (and (= ?is_ 1) (> ?pr ?pp))
	then
	(modify ?n (priorites ?pr))
   (assert (message (str ?nn)(priorites ?pr)))
   )
	(if (= ?is_ 0)
	then
	(modify ?n (is 1 ))
	(modify ?n (priorites ?pr))
   (assert (message (str ?nn)(priorites ?pr)))
   )
)
(defrule R9 
	(food (is 1)(id 14 )(name ?name0)(priorites ?priorites0))
	?n<- (food (id 16  ))
   (food (id 16  )(is ?is_ )(name ?nn)(priorites ?pp))
	=>
   (bind ?pr ?priorites0)
	(if (and (= ?is_ 1) (> ?pr ?pp))
	then
	(modify ?n (priorites ?pr))
   (assert (message (str ?nn)(priorites ?pr)))
   )
	(if (= ?is_ 0)
	then
	(modify ?n (is 1 ))
	(modify ?n (priorites ?pr))
   (assert (message (str ?nn)(priorites ?pr)))
   )
)
(defrule R10 
	(food (is 1)(id 10 )(name ?name0)(priorites ?priorites0))
	?n<- (food (id 12  ))
   (food (id 12  )(is ?is_ )(name ?nn)(priorites ?pp))
	=>
   (bind ?pr ?priorites0)
	(if (and (= ?is_ 1) (> ?pr ?pp))
	then
	(modify ?n (priorites ?pr))
   (assert (message (str ?nn)(priorites ?pr)))
   )
	(if (= ?is_ 0)
	then
	(modify ?n (is 1 ))
	(modify ?n (priorites ?pr))
   (assert (message (str ?nn)(priorites ?pr)))
   )
)
(defrule R11 
	(food (is 1)(id 12 )(name ?name0)(priorites ?priorites0))
	?n<- (food (id 13  ))
   (food (id 13  )(is ?is_ )(name ?nn)(priorites ?pp))
	=>
   (bind ?pr ?priorites0)
	(if (and (= ?is_ 1) (> ?pr ?pp))
	then
	(modify ?n (priorites ?pr))
   (assert (message (str ?nn)(priorites ?pr)))
   )
	(if (= ?is_ 0)
	then
	(modify ?n (is 1 ))
	(modify ?n (priorites ?pr))
   (assert (message (str ?nn)(priorites ?pr)))
   )
)
(defrule R12 
	(food (is 1)(id 11 )(name ?name0)(priorites ?priorites0))
	(food (is 1)(id 13 )(name ?name1)(priorites ?priorites1))
	(food (is 1)(id 29 )(name ?name2)(priorites ?priorites2))
	(food (is 1)(id 30 )(name ?name3)(priorites ?priorites3))
	?n<- (food (id 31  ))
   (food (id 31  )(is ?is_ )(name ?nn)(priorites ?pp))
	=>
   (bind ?pr ?priorites0)
   (bind ?pr (- (+ ?pr ?priorites1) (* ?pr ?priorites1)))
   (bind ?pr (- (+ ?pr ?priorites2) (* ?pr ?priorites2)))
   (bind ?pr (- (+ ?pr ?priorites3) (* ?pr ?priorites3)))
	(if (and (= ?is_ 1) (> ?pr ?pp))
	then
	(modify ?n (priorites ?pr))
   (assert (message (str ?nn)(priorites ?pr)))
   )
	(if (= ?is_ 0)
	then
	(modify ?n (is 1 ))
	(modify ?n (priorites ?pr))
   (assert (message (str ?nn)(priorites ?pr)))
   )
)
(defrule R13 
	(food (is 1)(id 5 )(name ?name0)(priorites ?priorites0))
	?n<- (food (id 25  ))
   (food (id 25  )(is ?is_ )(name ?nn)(priorites ?pp))
	=>
   (bind ?pr ?priorites0)
	(if (and (= ?is_ 1) (> ?pr ?pp))
	then
	(modify ?n (priorites ?pr))
   (assert (message (str ?nn)(priorites ?pr)))
   )
	(if (= ?is_ 0)
	then
	(modify ?n (is 1 ))
	(modify ?n (priorites ?pr))
   (assert (message (str ?nn)(priorites ?pr)))
   )
)
(defrule R14 
	(food (is 1)(id 24 )(name ?name0)(priorites ?priorites0))
	(food (is 1)(id 25 )(name ?name1)(priorites ?priorites1))
	?n<- (food (id 26  ))
   (food (id 26  )(is ?is_ )(name ?nn)(priorites ?pp))
	=>
   (bind ?pr ?priorites0)
   (bind ?pr (- (+ ?pr ?priorites1) (* ?pr ?priorites1)))
	(if (and (= ?is_ 1) (> ?pr ?pp))
	then
	(modify ?n (priorites ?pr))
   (assert (message (str ?nn)(priorites ?pr)))
   )
	(if (= ?is_ 0)
	then
	(modify ?n (is 1 ))
	(modify ?n (priorites ?pr))
   (assert (message (str ?nn)(priorites ?pr)))
   )
)
(defrule R15 
	(food (is 1)(id 28 )(name ?name0)(priorites ?priorites0))
	?n<- (food (id 29  ))
   (food (id 29  )(is ?is_ )(name ?nn)(priorites ?pp))
	=>
   (bind ?pr ?priorites0)
	(if (and (= ?is_ 1) (> ?pr ?pp))
	then
	(modify ?n (priorites ?pr))
   (assert (message (str ?nn)(priorites ?pr)))
   )
	(if (= ?is_ 0)
	then
	(modify ?n (is 1 ))
	(modify ?n (priorites ?pr))
   (assert (message (str ?nn)(priorites ?pr)))
   )
)
(defrule R16 
	(food (is 1)(id 2 )(name ?name0)(priorites ?priorites0))
	(food (is 1)(id 3 )(name ?name1)(priorites ?priorites1))
	?n<- (food (id 20  ))
   (food (id 20  )(is ?is_ )(name ?nn)(priorites ?pp))
	=>
   (bind ?pr ?priorites0)
   (bind ?pr (- (+ ?pr ?priorites1) (* ?pr ?priorites1)))
	(if (and (= ?is_ 1) (> ?pr ?pp))
	then
	(modify ?n (priorites ?pr))
   (assert (message (str ?nn)(priorites ?pr)))
   )
	(if (= ?is_ 0)
	then
	(modify ?n (is 1 ))
	(modify ?n (priorites ?pr))
   (assert (message (str ?nn)(priorites ?pr)))
   )
)
(defrule R17 
	(food (is 1)(id 3 )(name ?name0)(priorites ?priorites0))
	(food (is 1)(id 4 )(name ?name1)(priorites ?priorites1))
	?n<- (food (id 20  ))
   (food (id 20  )(is ?is_ )(name ?nn)(priorites ?pp))
	=>
   (bind ?pr ?priorites0)
   (bind ?pr (- (+ ?pr ?priorites1) (* ?pr ?priorites1)))
	(if (and (= ?is_ 1) (> ?pr ?pp))
	then
	(modify ?n (priorites ?pr))
   (assert (message (str ?nn)(priorites ?pr)))
   )
	(if (= ?is_ 0)
	then
	(modify ?n (is 1 ))
	(modify ?n (priorites ?pr))
   (assert (message (str ?nn)(priorites ?pr)))
   )
)
(defrule R18 
	(food (is 1)(id 2 )(name ?name0)(priorites ?priorites0))
	(food (is 1)(id 3 )(name ?name1)(priorites ?priorites1))
	(food (is 1)(id 4 )(name ?name2)(priorites ?priorites2))
	?n<- (food (id 20  ))
   (food (id 20  )(is ?is_ )(name ?nn)(priorites ?pp))
	=>
   (bind ?pr ?priorites0)
   (bind ?pr (- (+ ?pr ?priorites1) (* ?pr ?priorites1)))
   (bind ?pr (- (+ ?pr ?priorites2) (* ?pr ?priorites2)))
	(if (and (= ?is_ 1) (> ?pr ?pp))
	then
	(modify ?n (priorites ?pr))
   (assert (message (str ?nn)(priorites ?pr)))
   )
	(if (= ?is_ 0)
	then
	(modify ?n (is 1 ))
	(modify ?n (priorites ?pr))
   (assert (message (str ?nn)(priorites ?pr)))
   )
)
(defrule R19 
	(food (is 1)(id 2 )(name ?name0)(priorites ?priorites0))
	(food (is 1)(id 32 )(name ?name1)(priorites ?priorites1))
	?n<- (food (id 4  ))
   (food (id 4  )(is ?is_ )(name ?nn)(priorites ?pp))
	=>
   (bind ?pr ?priorites0)
   (bind ?pr (- (+ ?pr ?priorites1) (* ?pr ?priorites1)))
	(if (and (= ?is_ 1) (> ?pr ?pp))
	then
	(modify ?n (priorites ?pr))
   (assert (message (str ?nn)(priorites ?pr)))
   )
	(if (= ?is_ 0)
	then
	(modify ?n (is 1 ))
	(modify ?n (priorites ?pr))
   (assert (message (str ?nn)(priorites ?pr)))
   )
)
(defrule R20 
	(food (is 1)(id 9 )(name ?name0)(priorites ?priorites0))
	(food (is 1)(id 16 )(name ?name1)(priorites ?priorites1))
	(food (is 1)(id 33 )(name ?name2)(priorites ?priorites2))
	?n<- (food (id 34  ))
   (food (id 34  )(is ?is_ )(name ?nn)(priorites ?pp))
	=>
   (bind ?pr ?priorites0)
   (bind ?pr (- (+ ?pr ?priorites1) (* ?pr ?priorites1)))
   (bind ?pr (- (+ ?pr ?priorites2) (* ?pr ?priorites2)))
	(if (and (= ?is_ 1) (> ?pr ?pp))
	then
	(modify ?n (priorites ?pr))
   (assert (message (str ?nn)(priorites ?pr)))
   )
	(if (= ?is_ 0)
	then
	(modify ?n (is 1 ))
	(modify ?n (priorites ?pr))
   (assert (message (str ?nn)(priorites ?pr)))
   )
)
(defrule R21 
	(food (is 1)(id 9 )(name ?name0)(priorites ?priorites0))
	(food (is 1)(id 16 )(name ?name1)(priorites ?priorites1))
	(food (is 1)(id 35 )(name ?name2)(priorites ?priorites2))
	?n<- (food (id 36  ))
   (food (id 36  )(is ?is_ )(name ?nn)(priorites ?pp))
	=>
   (bind ?pr ?priorites0)
   (bind ?pr (- (+ ?pr ?priorites1) (* ?pr ?priorites1)))
   (bind ?pr (- (+ ?pr ?priorites2) (* ?pr ?priorites2)))
	(if (and (= ?is_ 1) (> ?pr ?pp))
	then
	(modify ?n (priorites ?pr))
   (assert (message (str ?nn)(priorites ?pr)))
   )
	(if (= ?is_ 0)
	then
	(modify ?n (is 1 ))
	(modify ?n (priorites ?pr))
   (assert (message (str ?nn)(priorites ?pr)))
   )
)
(defrule R22 
	(food (is 1)(id 14 )(name ?name0)(priorites ?priorites0))
	(food (is 1)(id 7 )(name ?name1)(priorites ?priorites1))
	?n<- (food (id 37  ))
   (food (id 37  )(is ?is_ )(name ?nn)(priorites ?pp))
	=>
   (bind ?pr ?priorites0)
   (bind ?pr (- (+ ?pr ?priorites1) (* ?pr ?priorites1)))
	(if (and (= ?is_ 1) (> ?pr ?pp))
	then
	(modify ?n (priorites ?pr))
   (assert (message (str ?nn)(priorites ?pr)))
   )
	(if (= ?is_ 0)
	then
	(modify ?n (is 1 ))
	(modify ?n (priorites ?pr))
   (assert (message (str ?nn)(priorites ?pr)))
   )
)
(defrule R23 
	(food (is 1)(id 27 )(name ?name0)(priorites ?priorites0))
	(food (is 1)(id 7 )(name ?name1)(priorites ?priorites1))
	(food (is 1)(id 2 )(name ?name2)(priorites ?priorites2))
	?n<- (food (id 38  ))
   (food (id 38  )(is ?is_ )(name ?nn)(priorites ?pp))
	=>
   (bind ?pr ?priorites0)
   (bind ?pr (- (+ ?pr ?priorites1) (* ?pr ?priorites1)))
   (bind ?pr (- (+ ?pr ?priorites2) (* ?pr ?priorites2)))
	(if (and (= ?is_ 1) (> ?pr ?pp))
	then
	(modify ?n (priorites ?pr))
   (assert (message (str ?nn)(priorites ?pr)))
   )
	(if (= ?is_ 0)
	then
	(modify ?n (is 1 ))
	(modify ?n (priorites ?pr))
   (assert (message (str ?nn)(priorites ?pr)))
   )
)
(defrule R24 
	(food (is 1)(id 12 )(name ?name0)(priorites ?priorites0))
	?n<- (food (id 39  ))
   (food (id 39  )(is ?is_ )(name ?nn)(priorites ?pp))
	=>
   (bind ?pr ?priorites0)
	(if (and (= ?is_ 1) (> ?pr ?pp))
	then
	(modify ?n (priorites ?pr))
   (assert (message (str ?nn)(priorites ?pr)))
   )
	(if (= ?is_ 0)
	then
	(modify ?n (is 1 ))
	(modify ?n (priorites ?pr))
   (assert (message (str ?nn)(priorites ?pr)))
   )
)
(defrule R25 
	(food (is 1)(id 11 )(name ?name0)(priorites ?priorites0))
	(food (is 1)(id 39 )(name ?name1)(priorites ?priorites1))
	(food (is 1)(id 29 )(name ?name2)(priorites ?priorites2))
	(food (is 1)(id 15 )(name ?name3)(priorites ?priorites3))
	?n<- (food (id 40  ))
   (food (id 40  )(is ?is_ )(name ?nn)(priorites ?pp))
	=>
   (bind ?pr ?priorites0)
   (bind ?pr (- (+ ?pr ?priorites1) (* ?pr ?priorites1)))
   (bind ?pr (- (+ ?pr ?priorites2) (* ?pr ?priorites2)))
   (bind ?pr (- (+ ?pr ?priorites3) (* ?pr ?priorites3)))
	(if (and (= ?is_ 1) (> ?pr ?pp))
	then
	(modify ?n (priorites ?pr))
   (assert (message (str ?nn)(priorites ?pr)))
   )
	(if (= ?is_ 0)
	then
	(modify ?n (is 1 ))
	(modify ?n (priorites ?pr))
   (assert (message (str ?nn)(priorites ?pr)))
   )
)
(defrule R26 
	(food (is 1)(id 11 )(name ?name0)(priorites ?priorites0))
	(food (is 1)(id 9 )(name ?name1)(priorites ?priorites1))
	?n<- (food (id 41  ))
   (food (id 41  )(is ?is_ )(name ?nn)(priorites ?pp))
	=>
   (bind ?pr ?priorites0)
   (bind ?pr (- (+ ?pr ?priorites1) (* ?pr ?priorites1)))
	(if (and (= ?is_ 1) (> ?pr ?pp))
	then
	(modify ?n (priorites ?pr))
   (assert (message (str ?nn)(priorites ?pr)))
   )
	(if (= ?is_ 0)
	then
	(modify ?n (is 1 ))
	(modify ?n (priorites ?pr))
   (assert (message (str ?nn)(priorites ?pr)))
   )
)
(defrule R27 
	(food (is 1)(id 41 )(name ?name0)(priorites ?priorites0))
	(food (is 1)(id 13 )(name ?name1)(priorites ?priorites1))
	(food (is 1)(id 33 )(name ?name2)(priorites ?priorites2))
	(food (is 1)(id 15 )(name ?name3)(priorites ?priorites3))
	?n<- (food (id 42  ))
   (food (id 42  )(is ?is_ )(name ?nn)(priorites ?pp))
	=>
   (bind ?pr ?priorites0)
   (bind ?pr (- (+ ?pr ?priorites1) (* ?pr ?priorites1)))
   (bind ?pr (- (+ ?pr ?priorites2) (* ?pr ?priorites2)))
   (bind ?pr (- (+ ?pr ?priorites3) (* ?pr ?priorites3)))
	(if (and (= ?is_ 1) (> ?pr ?pp))
	then
	(modify ?n (priorites ?pr))
   (assert (message (str ?nn)(priorites ?pr)))
   )
	(if (= ?is_ 0)
	then
	(modify ?n (is 1 ))
	(modify ?n (priorites ?pr))
   (assert (message (str ?nn)(priorites ?pr)))
   )
)
(defrule R28 
	(food (is 1)(id 11 )(name ?name0)(priorites ?priorites0))
	(food (is 1)(id 9 )(name ?name1)(priorites ?priorites1))
	(food (is 1)(id 2 )(name ?name2)(priorites ?priorites2))
	?n<- (food (id 43  ))
   (food (id 43  )(is ?is_ )(name ?nn)(priorites ?pp))
	=>
   (bind ?pr ?priorites0)
   (bind ?pr (- (+ ?pr ?priorites1) (* ?pr ?priorites1)))
   (bind ?pr (- (+ ?pr ?priorites2) (* ?pr ?priorites2)))
	(if (and (= ?is_ 1) (> ?pr ?pp))
	then
	(modify ?n (priorites ?pr))
   (assert (message (str ?nn)(priorites ?pr)))
   )
	(if (= ?is_ 0)
	then
	(modify ?n (is 1 ))
	(modify ?n (priorites ?pr))
   (assert (message (str ?nn)(priorites ?pr)))
   )
)
(defrule R29 
	(food (is 1)(id 4 )(name ?name0)(priorites ?priorites0))
	?n<- (food (id 44  ))
   (food (id 44  )(is ?is_ )(name ?nn)(priorites ?pp))
	=>
   (bind ?pr ?priorites0)
	(if (and (= ?is_ 1) (> ?pr ?pp))
	then
	(modify ?n (priorites ?pr))
   (assert (message (str ?nn)(priorites ?pr)))
   )
	(if (= ?is_ 0)
	then
	(modify ?n (is 1 ))
	(modify ?n (priorites ?pr))
   (assert (message (str ?nn)(priorites ?pr)))
   )
)
(defrule R30 
	(food (is 1)(id 31 )(name ?name0)(priorites ?priorites0))
	(food (is 1)(id 44 )(name ?name1)(priorites ?priorites1))
	?n<- (food (id 45  ))
   (food (id 45  )(is ?is_ )(name ?nn)(priorites ?pp))
	=>
   (bind ?pr ?priorites0)
   (bind ?pr (- (+ ?pr ?priorites1) (* ?pr ?priorites1)))
	(if (and (= ?is_ 1) (> ?pr ?pp))
	then
	(modify ?n (priorites ?pr))
   (assert (message (str ?nn)(priorites ?pr)))
   )
	(if (= ?is_ 0)
	then
	(modify ?n (is 1 ))
	(modify ?n (priorites ?pr))
   (assert (message (str ?nn)(priorites ?pr)))
   )
)
(defrule R31 
	(food (is 1)(id 11 )(name ?name0)(priorites ?priorites0))
	(food (is 1)(id 12 )(name ?name1)(priorites ?priorites1))
	?n<- (food (id 46  ))
   (food (id 46  )(is ?is_ )(name ?nn)(priorites ?pp))
	=>
   (bind ?pr ?priorites0)
   (bind ?pr (- (+ ?pr ?priorites1) (* ?pr ?priorites1)))
	(if (and (= ?is_ 1) (> ?pr ?pp))
	then
	(modify ?n (priorites ?pr))
   (assert (message (str ?nn)(priorites ?pr)))
   )
	(if (= ?is_ 0)
	then
	(modify ?n (is 1 ))
	(modify ?n (priorites ?pr))
   (assert (message (str ?nn)(priorites ?pr)))
   )
)
(defrule R32 
	(food (is 1)(id 41 )(name ?name0)(priorites ?priorites0))
	(food (is 1)(id 12 )(name ?name1)(priorites ?priorites1))
	?n<- (food (id 47  ))
   (food (id 47  )(is ?is_ )(name ?nn)(priorites ?pp))
	=>
   (bind ?pr ?priorites0)
   (bind ?pr (- (+ ?pr ?priorites1) (* ?pr ?priorites1)))
	(if (and (= ?is_ 1) (> ?pr ?pp))
	then
	(modify ?n (priorites ?pr))
   (assert (message (str ?nn)(priorites ?pr)))
   )
	(if (= ?is_ 0)
	then
	(modify ?n (is 1 ))
	(modify ?n (priorites ?pr))
   (assert (message (str ?nn)(priorites ?pr)))
   )
)
(defrule R33 
	(food (is 1)(id 11 )(name ?name0)(priorites ?priorites0))
	(food (is 1)(id 48 )(name ?name1)(priorites ?priorites1))
	?n<- (food (id 49  ))
   (food (id 49  )(is ?is_ )(name ?nn)(priorites ?pp))
	=>
   (bind ?pr ?priorites0)
   (bind ?pr (- (+ ?pr ?priorites1) (* ?pr ?priorites1)))
	(if (and (= ?is_ 1) (> ?pr ?pp))
	then
	(modify ?n (priorites ?pr))
   (assert (message (str ?nn)(priorites ?pr)))
   )
	(if (= ?is_ 0)
	then
	(modify ?n (is 1 ))
	(modify ?n (priorites ?pr))
   (assert (message (str ?nn)(priorites ?pr)))
   )
)
(defrule R34 
	(food (is 1)(id 11 )(name ?name0)(priorites ?priorites0))
	(food (is 1)(id 13 )(name ?name1)(priorites ?priorites1))
	(food (is 1)(id 33 )(name ?name2)(priorites ?priorites2))
	?n<- (food (id 50  ))
   (food (id 50  )(is ?is_ )(name ?nn)(priorites ?pp))
	=>
   (bind ?pr ?priorites0)
   (bind ?pr (- (+ ?pr ?priorites1) (* ?pr ?priorites1)))
   (bind ?pr (- (+ ?pr ?priorites2) (* ?pr ?priorites2)))
	(if (and (= ?is_ 1) (> ?pr ?pp))
	then
	(modify ?n (priorites ?pr))
   (assert (message (str ?nn)(priorites ?pr)))
   )
	(if (= ?is_ 0)
	then
	(modify ?n (is 1 ))
	(modify ?n (priorites ?pr))
   (assert (message (str ?nn)(priorites ?pr)))
   )
)
(defrule R35 
	(food (is 1)(id 51 )(name ?name0)(priorites ?priorites0))
	(food (is 1)(id 2 )(name ?name1)(priorites ?priorites1))
	?n<- (food (id 52  ))
   (food (id 52  )(is ?is_ )(name ?nn)(priorites ?pp))
	=>
   (bind ?pr ?priorites0)
   (bind ?pr (- (+ ?pr ?priorites1) (* ?pr ?priorites1)))
	(if (and (= ?is_ 1) (> ?pr ?pp))
	then
	(modify ?n (priorites ?pr))
   (assert (message (str ?nn)(priorites ?pr)))
   )
	(if (= ?is_ 0)
	then
	(modify ?n (is 1 ))
	(modify ?n (priorites ?pr))
   (assert (message (str ?nn)(priorites ?pr)))
   )
)
(defrule R36 
	(food (is 1)(id 51 )(name ?name0)(priorites ?priorites0))
	(food (is 1)(id 2 )(name ?name1)(priorites ?priorites1))
	(food (is 1)(id 7 )(name ?name2)(priorites ?priorites2))
	?n<- (food (id 53  ))
   (food (id 53  )(is ?is_ )(name ?nn)(priorites ?pp))
	=>
   (bind ?pr ?priorites0)
   (bind ?pr (- (+ ?pr ?priorites1) (* ?pr ?priorites1)))
   (bind ?pr (- (+ ?pr ?priorites2) (* ?pr ?priorites2)))
	(if (and (= ?is_ 1) (> ?pr ?pp))
	then
	(modify ?n (priorites ?pr))
   (assert (message (str ?nn)(priorites ?pr)))
   )
	(if (= ?is_ 0)
	then
	(modify ?n (is 1 ))
	(modify ?n (priorites ?pr))
   (assert (message (str ?nn)(priorites ?pr)))
   )
)
(defrule R37 
	(food (is 1)(id 51 )(name ?name0)(priorites ?priorites0))
	(food (is 1)(id 2 )(name ?name1)(priorites ?priorites1))
	(food (is 1)(id 4 )(name ?name2)(priorites ?priorites2))
	(food (is 1)(id 7 )(name ?name3)(priorites ?priorites3))
	?n<- (food (id 54 ))
   (food (id 54 )(is ?is_ )(name ?nn)(priorites ?pp))
	=>
   (bind ?pr ?priorites0)
   (bind ?pr (- (+ ?pr ?priorites1) (* ?pr ?priorites1)))
   (bind ?pr (- (+ ?pr ?priorites2) (* ?pr ?priorites2)))
   (bind ?pr (- (+ ?pr ?priorites3) (* ?pr ?priorites3)))
	(if (and (= ?is_ 1) (> ?pr ?pp))
	then
	(modify ?n (priorites ?pr))
   (assert (message (str ?nn)(priorites ?pr)))
   )
	(if (= ?is_ 0)
	then
	(modify ?n (is 1 ))
	(modify ?n (priorites ?pr))
   (assert (message (str ?nn)(priorites ?pr)))
   )
)
(defrule R38 
	(food (is 1)(id 51 )(name ?name0)(priorites ?priorites0))
	(food (is 1)(id 2 )(name ?name1)(priorites ?priorites1))
	(food (is 1)(id 4 )(name ?name2)(priorites ?priorites2))
	(food (is 1)(id 7 )(name ?name3)(priorites ?priorites3))
	(food (is 1)(id 3 )(name ?name4)(priorites ?priorites4))
	?n<- (food (id 55  ))
   (food (id 55  )(is ?is_ )(name ?nn)(priorites ?pp))
	=>
   (bind ?pr ?priorites0)
   (bind ?pr (- (+ ?pr ?priorites1) (* ?pr ?priorites1)))
   (bind ?pr (- (+ ?pr ?priorites2) (* ?pr ?priorites2)))
   (bind ?pr (- (+ ?pr ?priorites3) (* ?pr ?priorites3)))
   (bind ?pr (- (+ ?pr ?priorites4) (* ?pr ?priorites4)))
	(if (and (= ?is_ 1) (> ?pr ?pp))
	then
	(modify ?n (priorites ?pr))
   (assert (message (str ?nn)(priorites ?pr)))
   )
	(if (= ?is_ 0)
	then
	(modify ?n (is 1 ))
	(modify ?n (priorites ?pr))
   (assert (message (str ?nn)(priorites ?pr)))
   )
)
(defrule R39 
	(food (is 1)(id 12 )(name ?name0)(priorites ?priorites0))
	(food (is 1)(id 59 )(name ?name1)(priorites ?priorites1))
	(food (is 1)(id 7 )(name ?name2)(priorites ?priorites2))
	?n<- (food (id 56  ))
   (food (id 56  )(is ?is_ )(name ?nn)(priorites ?pp))
	=>
   (bind ?pr ?priorites0)
   (bind ?pr (- (+ ?pr ?priorites1) (* ?pr ?priorites1)))
   (bind ?pr (- (+ ?pr ?priorites2) (* ?pr ?priorites2)))
	(if (and (= ?is_ 1) (> ?pr ?pp))
	then
	(modify ?n (priorites ?pr))
   (assert (message (str ?nn)(priorites ?pr)))
   )
	(if (= ?is_ 0)
	then
	(modify ?n (is 1 ))
	(modify ?n (priorites ?pr))
   (assert (message (str ?nn)(priorites ?pr)))
   )
)
(defrule R40 
	(food (is 1)(id 57 )(name ?name0)(priorites ?priorites0))
	(food (is 1)(id 2 )(name ?name1)(priorites ?priorites1))
	?n<- (food (id 58  ))
   (food (id 58  )(is ?is_ )(name ?nn)(priorites ?pp))
	=>
   (bind ?pr ?priorites0)
   (bind ?pr (- (+ ?pr ?priorites1) (* ?pr ?priorites1)))
	(if (and (= ?is_ 1) (> ?pr ?pp))
	then
	(modify ?n (priorites ?pr))
   (assert (message (str ?nn)(priorites ?pr)))
   )
	(if (= ?is_ 0)
	then
	(modify ?n (is 1 ))
	(modify ?n (priorites ?pr))
   (assert (message (str ?nn)(priorites ?pr)))
   )
)
(defrule R41 
	(food (is 1)(id 59 )(name ?name0)(priorites ?priorites0))
	(food (is 1)(id 9 )(name ?name1)(priorites ?priorites1))
	?n<- (food (id 60  ))
   (food (id 60  )(is ?is_ )(name ?nn)(priorites ?pp))
	=>
   (bind ?pr ?priorites0)
   (bind ?pr (- (+ ?pr ?priorites1) (* ?pr ?priorites1)))
	(if (and (= ?is_ 1) (> ?pr ?pp))
	then
	(modify ?n (priorites ?pr))
   (assert (message (str ?nn)(priorites ?pr)))
   )
	(if (= ?is_ 0)
	then
	(modify ?n (is 1 ))
	(modify ?n (priorites ?pr))
   (assert (message (str ?nn)(priorites ?pr)))
   )
)
(defrule R42 
	(food (is 1)(id 13 )(name ?name0)(priorites ?priorites0))
	?n<- (food (id 61  ))
   (food (id 61  )(is ?is_ )(name ?nn)(priorites ?pp))
	=>
   (bind ?pr ?priorites0)
	(if (and (= ?is_ 1) (> ?pr ?pp))
	then
	(modify ?n (priorites ?pr))
   (assert (message (str ?nn)(priorites ?pr)))
   )
	(if (= ?is_ 0)
	then
	(modify ?n (is 1 ))
	(modify ?n (priorites ?pr))
   (assert (message (str ?nn)(priorites ?pr)))
   )
)
(defrule R43 
	(food (is 1)(id 62 )(name ?name0)(priorites ?priorites0))
	(food (is 1)(id 9 )(name ?name1)(priorites ?priorites1))
	?n<- (food (id 63  ))
   (food (id 63  )(is ?is_ )(name ?nn)(priorites ?pp))
	=>
   (bind ?pr ?priorites0)
   (bind ?pr (- (+ ?pr ?priorites1) (* ?pr ?priorites1)))
	(if (and (= ?is_ 1) (> ?pr ?pp))
	then
	(modify ?n (priorites ?pr))
   (assert (message (str ?nn)(priorites ?pr)))
   )
	(if (= ?is_ 0)
	then
	(modify ?n (is 1 ))
	(modify ?n (priorites ?pr))
   (assert (message (str ?nn)(priorites ?pr)))
   )
)
(defrule R44 
	(food (is 1)(id 63 )(name ?name0)(priorites ?priorites0))
	?n<- (food (id 64  ))
   (food (id 64  )(is ?is_ )(name ?nn)(priorites ?pp))
	=>
   (bind ?pr ?priorites0)
	(if (and (= ?is_ 1) (> ?pr ?pp))
	then
	(modify ?n (priorites ?pr))
   (assert (message (str ?nn)(priorites ?pr)))
   )
	(if (= ?is_ 0)
	then
	(modify ?n (is 1 ))
	(modify ?n (priorites ?pr))
   (assert (message (str ?nn)(priorites ?pr)))
   )
)
(defrule R45 
	(food (is 1)(id 65 )(name ?name0)(priorites ?priorites0))
	(food (is 1)(id 9 )(name ?name1)(priorites ?priorites1))
	?n<- (food (id 66  ))
   (food (id 66  )(is ?is_ )(name ?nn)(priorites ?pp))
	=>
   (bind ?pr ?priorites0)
   (bind ?pr (- (+ ?pr ?priorites1) (* ?pr ?priorites1)))
	(if (and (= ?is_ 1) (> ?pr ?pp))
	then
	(modify ?n (priorites ?pr))
   (assert (message (str ?nn)(priorites ?pr)))
   )
	(if (= ?is_ 0)
	then
	(modify ?n (is 1 ))
	(modify ?n (priorites ?pr))
   (assert (message (str ?nn)(priorites ?pr)))
   )
)
(defrule R46 
	(food (is 1)(id 11 )(name ?name0)(priorites ?priorites0))
	(food (is 1)(id 9 )(name ?name1)(priorites ?priorites1))
	(food (is 1)(id 48 )(name ?name2)(priorites ?priorites2))
	?n<- (food (id 67  ))
   (food (id 67  )(is ?is_ )(name ?nn)(priorites ?pp))
	=>
   (bind ?pr ?priorites0)
   (bind ?pr (- (+ ?pr ?priorites1) (* ?pr ?priorites1)))
   (bind ?pr (- (+ ?pr ?priorites2) (* ?pr ?priorites2)))
	(if (and (= ?is_ 1) (> ?pr ?pp))
	then
	(modify ?n (priorites ?pr))
   (assert (message (str ?nn)(priorites ?pr)))
   )
	(if (= ?is_ 0)
	then
	(modify ?n (is 1 ))
	(modify ?n (priorites ?pr))
   (assert (message (str ?nn)(priorites ?pr)))
   )
)
(defrule R47 
	(food (is 1)(id 33 )(name ?name0)(priorites ?priorites0))
	(food (is 1)(id 9 )(name ?name1)(priorites ?priorites1))
	(food (is 1)(id 48 )(name ?name2)(priorites ?priorites2))
	?n<- (food (id 68  ))
   (food (id 68  )(is ?is_ )(name ?nn)(priorites ?pp))
	=>
   (bind ?pr ?priorites0)
   (bind ?pr (- (+ ?pr ?priorites1) (* ?pr ?priorites1)))
   (bind ?pr (- (+ ?pr ?priorites2) (* ?pr ?priorites2)))
	(if (and (= ?is_ 1) (> ?pr ?pp))
	then
	(modify ?n (priorites ?pr))
   (assert (message (str ?nn)(priorites ?pr)))
   )
	(if (= ?is_ 0)
	then
	(modify ?n (is 1 ))
	(modify ?n (priorites ?pr))
   (assert (message (str ?nn)(priorites ?pr)))
   )
)
(defrule R48 
	(food (is 1)(id 69 )(name ?name0)(priorites ?priorites0))
	(food (is 1)(id 9 )(name ?name1)(priorites ?priorites1))
	?n<- (food (id 70  ))
   (food (id 70  )(is ?is_ )(name ?nn)(priorites ?pp))
	=>
   (bind ?pr ?priorites0)
   (bind ?pr (- (+ ?pr ?priorites1) (* ?pr ?priorites1)))
	(if (and (= ?is_ 1) (> ?pr ?pp))
	then
	(modify ?n (priorites ?pr))
   (assert (message (str ?nn)(priorites ?pr)))
   )
	(if (= ?is_ 0)
	then
	(modify ?n (is 1 ))
	(modify ?n (priorites ?pr))
   (assert (message (str ?nn)(priorites ?pr)))
   )
)
(defrule R49 
	(food (is 1)(id 24 )(name ?name0)(priorites ?priorites0))
	(food (is 1)(id 71 )(name ?name1)(priorites ?priorites1))
	?n<- (food (id 72  ))
   (food (id 72  )(is ?is_ )(name ?nn)(priorites ?pp))
	=>
   (bind ?pr ?priorites0)
   (bind ?pr (- (+ ?pr ?priorites1) (* ?pr ?priorites1)))
	(if (and (= ?is_ 1) (> ?pr ?pp))
	then
	(modify ?n (priorites ?pr))
   (assert (message (str ?nn)(priorites ?pr)))
   )
	(if (= ?is_ 0)
	then
	(modify ?n (is 1 ))
	(modify ?n (priorites ?pr))
   (assert (message (str ?nn)(priorites ?pr)))
   )
)
(defrule R50 
	(food (is 1)(id 11 )(name ?name0)(priorites ?priorites0))
	(food (is 1)(id 48 )(name ?name1)(priorites ?priorites1))
	(food (is 1)(id 9 )(name ?name2)(priorites ?priorites2))
	?n<- (food (id 73  ))
   (food (id 73  )(is ?is_ )(name ?nn)(priorites ?pp))
	=>
   (bind ?pr ?priorites0)
   (bind ?pr (- (+ ?pr ?priorites1) (* ?pr ?priorites1)))
   (bind ?pr (- (+ ?pr ?priorites2) (* ?pr ?priorites2)))
	(if (and (= ?is_ 1) (> ?pr ?pp))
	then
	(modify ?n (priorites ?pr))
   (assert (message (str ?nn)(priorites ?pr)))
   )
	(if (= ?is_ 0)
	then
	(modify ?n (is 1 ))
	(modify ?n (priorites ?pr))
   (assert (message (str ?nn)(priorites ?pr)))
   )
)
(defrule R51 
	(food (is 1)(id 73 )(name ?name0)(priorites ?priorites0))
	(food (is 1)(id 13 )(name ?name1)(priorites ?priorites1))
	(food (is 1)(id 23 )(name ?name2)(priorites ?priorites2))
	?n<- (food (id 74  ))
   (food (id 74  )(is ?is_ )(name ?nn)(priorites ?pp))
	=>
   (bind ?pr ?priorites0)
   (bind ?pr (- (+ ?pr ?priorites1) (* ?pr ?priorites1)))
   (bind ?pr (- (+ ?pr ?priorites2) (* ?pr ?priorites2)))
	(if (and (= ?is_ 1) (> ?pr ?pp))
	then
	(modify ?n (priorites ?pr))
   (assert (message (str ?nn)(priorites ?pr)))
   )
	(if (= ?is_ 0)
	then
	(modify ?n (is 1 ))
	(modify ?n (priorites ?pr))
   (assert (message (str ?nn)(priorites ?pr)))
   )
)
(defrule R52 
	(food (is 1)(id 76 )(name ?name0)(priorites ?priorites0))
	(food (is 1)(id 14 )(name ?name1)(priorites ?priorites1))
	?n<- (food (id 75  ))
   (food (id 75  )(is ?is_ )(name ?nn)(priorites ?pp))
	=>
   (bind ?pr ?priorites0)
   (bind ?pr (- (+ ?pr ?priorites1) (* ?pr ?priorites1)))
	(if (and (= ?is_ 1) (> ?pr ?pp))
	then
	(modify ?n (priorites ?pr))
   (assert (message (str ?nn)(priorites ?pr)))
   )
	(if (= ?is_ 0)
	then
	(modify ?n (is 1 ))
	(modify ?n (priorites ?pr))
   (assert (message (str ?nn)(priorites ?pr)))
   )
)
(defrule R53 
	(food (is 1)(id 76 )(name ?name0)(priorites ?priorites0))
	(food (is 1)(id 10 )(name ?name1)(priorites ?priorites1))
	(food (is 1)(id 2 )(name ?name2)(priorites ?priorites2))
	(food (is 1)(id 7   )(name ?name3)(priorites ?priorites3))
	?n<- (food (id 77  ))
   (food (id 77  )(is ?is_ )(name ?nn)(priorites ?pp))
	=>
   (bind ?pr ?priorites0)
   (bind ?pr (- (+ ?pr ?priorites1) (* ?pr ?priorites1)))
   (bind ?pr (- (+ ?pr ?priorites2) (* ?pr ?priorites2)))
   (bind ?pr (- (+ ?pr ?priorites3) (* ?pr ?priorites3)))
	(if (and (= ?is_ 1) (> ?pr ?pp))
	then
	(modify ?n (priorites ?pr))
   (assert (message (str ?nn)(priorites ?pr)))
   )
	(if (= ?is_ 0)
	then
	(modify ?n (is 1 ))
	(modify ?n (priorites ?pr))
   (assert (message (str ?nn)(priorites ?pr)))
   )
)
(defrule R54 
	(food (is 1)(id 76 )(name ?name0)(priorites ?priorites0))
	(food (is 1)(id 82 )(name ?name1)(priorites ?priorites1))
	?n<- (food (id 81  ))
   (food (id 81  )(is ?is_ )(name ?nn)(priorites ?pp))
	=>
   (bind ?pr ?priorites0)
   (bind ?pr (- (+ ?pr ?priorites1) (* ?pr ?priorites1)))
	(if (and (= ?is_ 1) (> ?pr ?pp))
	then
	(modify ?n (priorites ?pr))
   (assert (message (str ?nn)(priorites ?pr)))
   )
	(if (= ?is_ 0)
	then
	(modify ?n (is 1 ))
	(modify ?n (priorites ?pr))
   (assert (message (str ?nn)(priorites ?pr)))
   )
)
(defrule R55 
	(food (is 1)(id 11 )(name ?name0)(priorites ?priorites0))
	(food (is 1)(id 9 )(name ?name1)(priorites ?priorites1))
	(food (is 1)(id 48 )(name ?name2)(priorites ?priorites2))
	?n<- (food (id 79  ))
   (food (id 79  )(is ?is_ )(name ?nn)(priorites ?pp))
	=>
   (bind ?pr ?priorites0)
   (bind ?pr (- (+ ?pr ?priorites1) (* ?pr ?priorites1)))
   (bind ?pr (- (+ ?pr ?priorites2) (* ?pr ?priorites2)))
	(if (and (= ?is_ 1) (> ?pr ?pp))
	then
	(modify ?n (priorites ?pr))
   (assert (message (str ?nn)(priorites ?pr)))
   )
	(if (= ?is_ 0)
	then
	(modify ?n (is 1 ))
	(modify ?n (priorites ?pr))
   (assert (message (str ?nn)(priorites ?pr)))
   )
)
(defrule R56 
	(food (is 1)(id 12 )(name ?name0)(priorites ?priorites0))
	(food (is 1)(id 79 )(name ?name1)(priorites ?priorites1))
	?n<- (food (id 78  ))
   (food (id 78  )(is ?is_ )(name ?nn)(priorites ?pp))
	=>
   (bind ?pr ?priorites0)
   (bind ?pr (- (+ ?pr ?priorites1) (* ?pr ?priorites1)))
	(if (and (= ?is_ 1) (> ?pr ?pp))
	then
	(modify ?n (priorites ?pr))
   (assert (message (str ?nn)(priorites ?pr)))
   )
	(if (= ?is_ 0)
	then
	(modify ?n (is 1 ))
	(modify ?n (priorites ?pr))
   (assert (message (str ?nn)(priorites ?pr)))
   )
)
(defrule R57 
	(food (is 1)(id 44 )(name ?name0)(priorites ?priorites0))
	(food (is 1)(id 12 )(name ?name1)(priorites ?priorites1))
	(food (is 1)(id 29 )(name ?name2)(priorites ?priorites2))
	?n<- (food (id 80  ))
   (food (id 80  )(is ?is_ )(name ?nn)(priorites ?pp))
	=>
   (bind ?pr ?priorites0)
   (bind ?pr (- (+ ?pr ?priorites1) (* ?pr ?priorites1)))
   (bind ?pr (- (+ ?pr ?priorites2) (* ?pr ?priorites2)))
	(if (and (= ?is_ 1) (> ?pr ?pp))
	then
	(modify ?n (priorites ?pr))
   (assert (message (str ?nn)(priorites ?pr)))
   )
	(if (= ?is_ 0)
	then
	(modify ?n (is 1 ))
	(modify ?n (priorites ?pr))
   (assert (message (str ?nn)(priorites ?pr)))
   )
)
(defrule R58 
	(food (is 1)(id 80 )(name ?name0)(priorites ?priorites0))
	(food (is 1)(id 73 )(name ?name1)(priorites ?priorites1))
	?n<- (food (id 83  ))
   (food (id 83  )(is ?is_ )(name ?nn)(priorites ?pp))
	=>
   (bind ?pr ?priorites0)
   (bind ?pr (- (+ ?pr ?priorites1) (* ?pr ?priorites1)))
	(if (and (= ?is_ 1) (> ?pr ?pp))
	then
	(modify ?n (priorites ?pr))
   (assert (message (str ?nn)(priorites ?pr)))
   )
	(if (= ?is_ 0)
	then
	(modify ?n (is 1 ))
	(modify ?n (priorites ?pr))
   (assert (message (str ?nn)(priorites ?pr)))
   )
)
(defrule R59 
	(food (is 1)(id 80 )(name ?name0)(priorites ?priorites0))
	(food (is 1)(id 85 )(name ?name1)(priorites ?priorites1))
	(food (is 1)(id 28 )(name ?name2)(priorites ?priorites2))
	?n<- (food (id 84  ))
   (food (id 84  )(is ?is_ )(name ?nn)(priorites ?pp))
	=>
   (bind ?pr ?priorites0)
   (bind ?pr (- (+ ?pr ?priorites1) (* ?pr ?priorites1)))
   (bind ?pr (- (+ ?pr ?priorites2) (* ?pr ?priorites2)))
	(if (and (= ?is_ 1) (> ?pr ?pp))
	then
	(modify ?n (priorites ?pr))
   (assert (message (str ?nn)(priorites ?pr)))
   )
	(if (= ?is_ 0)
	then
	(modify ?n (is 1 ))
	(modify ?n (priorites ?pr))
   (assert (message (str ?nn)(priorites ?pr)))
   )
)
(defrule R60 
	(food (is 1)(id 73 )(name ?name0)(priorites ?priorites0))
	(food (is 1)(id 62 )(name ?name1)(priorites ?priorites1))
	(food (is 1)(id 15 )(name ?name2)(priorites ?priorites2))
	(food (is 1)(id 30 )(name ?name3)(priorites ?priorites3))
	?n<- (food (id 86  ))
   (food (id 86  )(is ?is_ )(name ?nn)(priorites ?pp))
	=>
   (bind ?pr ?priorites0)
   (bind ?pr (- (+ ?pr ?priorites1) (* ?pr ?priorites1)))
   (bind ?pr (- (+ ?pr ?priorites2) (* ?pr ?priorites2)))
   (bind ?pr (- (+ ?pr ?priorites3) (* ?pr ?priorites3)))
	(if (and (= ?is_ 1) (> ?pr ?pp))
	then
	(modify ?n (priorites ?pr))
   (assert (message (str ?nn)(priorites ?pr)))
   )
	(if (= ?is_ 0)
	then
	(modify ?n (is 1 ))
	(modify ?n (priorites ?pr))
   (assert (message (str ?nn)(priorites ?pr)))
   )
)
(defrule R61 
	(food (is 1)(id 33 )(name ?name0)(priorites ?priorites0))
	(food (is 1)(id 79 )(name ?name1)(priorites ?priorites1))
	?n<- (food (id 87  ))
   (food (id 87  )(is ?is_ )(name ?nn)(priorites ?pp))
	=>
   (bind ?pr ?priorites0)
   (bind ?pr (- (+ ?pr ?priorites1) (* ?pr ?priorites1)))
	(if (and (= ?is_ 1) (> ?pr ?pp))
	then
	(modify ?n (priorites ?pr))
   (assert (message (str ?nn)(priorites ?pr)))
   )
	(if (= ?is_ 0)
	then
	(modify ?n (is 1 ))
	(modify ?n (priorites ?pr))
   (assert (message (str ?nn)(priorites ?pr)))
   )
)
(defrule R62 
	(food (is 1)(id 11 )(name ?name0)(priorites ?priorites0))
	(food (is 1)(id 88 )(name ?name1)(priorites ?priorites1))
	(food (is 1)(id 48 )(name ?name2)(priorites ?priorites2))
	(food (is 1)(id 17 )(name ?name3)(priorites ?priorites3))
	?n<- (food (id 89  ))
   (food (id 89  )(is ?is_ )(name ?nn)(priorites ?pp))
	=>
   (bind ?pr ?priorites0)
   (bind ?pr (- (+ ?pr ?priorites1) (* ?pr ?priorites1)))
   (bind ?pr (- (+ ?pr ?priorites2) (* ?pr ?priorites2)))
   (bind ?pr (- (+ ?pr ?priorites3) (* ?pr ?priorites3)))
	(if (and (= ?is_ 1) (> ?pr ?pp))
	then
	(modify ?n (priorites ?pr))
   (assert (message (str ?nn)(priorites ?pr)))
   )
	(if (= ?is_ 0)
	then
	(modify ?n (is 1 ))
	(modify ?n (priorites ?pr))
   (assert (message (str ?nn)(priorites ?pr)))
   )
)
(defrule R63 
	(food (is 1)(id 88 )(name ?name0)(priorites ?priorites0))
	?n<- (food (id 90  ))
   (food (id 90  )(is ?is_ )(name ?nn)(priorites ?pp))
	=>
   (bind ?pr ?priorites0)
	(if (and (= ?is_ 1) (> ?pr ?pp))
	then
	(modify ?n (priorites ?pr))
   (assert (message (str ?nn)(priorites ?pr)))
   )
	(if (= ?is_ 0)
	then
	(modify ?n (is 1 ))
	(modify ?n (priorites ?pr))
   (assert (message (str ?nn)(priorites ?pr)))
   )
)
(defrule R64 
	(food (is 1)(id 88 )(name ?name0)(priorites ?priorites0))
	?n<- (food (id 91  ))
   (food (id 91  )(is ?is_ )(name ?nn)(priorites ?pp))
	=>
   (bind ?pr ?priorites0)
	(if (and (= ?is_ 1) (> ?pr ?pp))
	then
	(modify ?n (priorites ?pr))
   (assert (message (str ?nn)(priorites ?pr)))
   )
	(if (= ?is_ 0)
	then
	(modify ?n (is 1 ))
	(modify ?n (priorites ?pr))
   (assert (message (str ?nn)(priorites ?pr)))
   )
)
(defrule R65 
	(food (is 1)(id 4 )(name ?name0)(priorites ?priorites0))
	(food (is 1)(id 76 )(name ?name1)(priorites ?priorites1))
	?n<- (food (id 21  ))
   (food (id 21  )(is ?is_ )(name ?nn)(priorites ?pp))
	=>
   (bind ?pr ?priorites0)
   (bind ?pr (- (+ ?pr ?priorites1) (* ?pr ?priorites1)))
	(if (and (= ?is_ 1) (> ?pr ?pp))
	then
	(modify ?n (priorites ?pr))
   (assert (message (str ?nn)(priorites ?pr)))
   )
	(if (= ?is_ 0)
	then
	(modify ?n (is 1 ))
	(modify ?n (priorites ?pr))
   (assert (message (str ?nn)(priorites ?pr)))
   )
)
(defrule R66 
	(food (is 1)(id 67 )(name ?name0)(priorites ?priorites0))
	(food (is 1)(id 61 )(name ?name1)(priorites ?priorites1))
	?n<- (food (id 74  ))
   (food (id 74  )(is ?is_ )(name ?nn)(priorites ?pp))
	=>
   (bind ?pr ?priorites0)
   (bind ?pr (- (+ ?pr ?priorites1) (* ?pr ?priorites1)))
	(if (and (= ?is_ 1) (> ?pr ?pp))
	then
	(modify ?n (priorites ?pr))
   (assert (message (str ?nn)(priorites ?pr)))
   )
	(if (= ?is_ 0)
	then
	(modify ?n (is 1 ))
	(modify ?n (priorites ?pr))
   (assert (message (str ?nn)(priorites ?pr)))
   )
)
(defrule R67 
	(food (is 1)(id 5 )(name ?name0)(priorites ?priorites0))
	(food (is 1)(id 12 )(name ?name1)(priorites ?priorites1))
	?n<- (food (id 92  ))
   (food (id 92  )(is ?is_ )(name ?nn)(priorites ?pp))
	=>
   (bind ?pr ?priorites0)
   (bind ?pr (- (+ ?pr ?priorites1) (* ?pr ?priorites1)))
	(if (and (= ?is_ 1) (> ?pr ?pp))
	then
	(modify ?n (priorites ?pr))
   (assert (message (str ?nn)(priorites ?pr)))
   )
	(if (= ?is_ 0)
	then
	(modify ?n (is 1 ))
	(modify ?n (priorites ?pr))
   (assert (message (str ?nn)(priorites ?pr)))
   )
)
(defrule R68 
	(food (is 1)(id 5 )(name ?name0)(priorites ?priorites0))
	(food (is 1)(id 12 )(name ?name1)(priorites ?priorites1))
	?n<- (food (id 93  ))
   (food (id 93  )(is ?is_ )(name ?nn)(priorites ?pp))
	=>
   (bind ?pr ?priorites0)
   (bind ?pr (- (+ ?pr ?priorites1) (* ?pr ?priorites1)))
	(if (and (= ?is_ 1) (> ?pr ?pp))
	then
	(modify ?n (priorites ?pr))
   (assert (message (str ?nn)(priorites ?pr)))
   )
	(if (= ?is_ 0)
	then
	(modify ?n (is 1 ))
	(modify ?n (priorites ?pr))
   (assert (message (str ?nn)(priorites ?pr)))
   )
)
(defrule R68 
	(food (is 1)(id 79 )(name ?name0)(priorites ?priorites0))
	(food (is 1)(id 12 )(name ?name1)(priorites ?priorites1))
	?n<- (food (id 93  ))
   (food (id 93  )(is ?is_ )(name ?nn)(priorites ?pp))
	=>
   (bind ?pr ?priorites0)
   (bind ?pr (- (+ ?pr ?priorites1) (* ?pr ?priorites1)))
	(if (and (= ?is_ 1) (> ?pr ?pp))
	then
	(modify ?n (priorites ?pr))
   (assert (message (str ?nn)(priorites ?pr)))
   )
	(if (= ?is_ 0)
	then
	(modify ?n (is 1 ))
	(modify ?n (priorites ?pr))
   (assert (message (str ?nn)(priorites ?pr)))
   )
)
(defrule R69 
	(food (is 1)(id 5 )(name ?name0)(priorites ?priorites0))
	(food (is 1)(id 12 )(name ?name1)(priorites ?priorites1))
	?n<- (food (id 95  ))
   (food (id 95  )(is ?is_ )(name ?nn)(priorites ?pp))
	=>
   (bind ?pr ?priorites0)
   (bind ?pr (- (+ ?pr ?priorites1) (* ?pr ?priorites1)))
	(if (and (= ?is_ 1) (> ?pr ?pp))
	then
	(modify ?n (priorites ?pr))
   (assert (message (str ?nn)(priorites ?pr)))
   )
	(if (= ?is_ 0)
	then
	(modify ?n (is 1 ))
	(modify ?n (priorites ?pr))
   (assert (message (str ?nn)(priorites ?pr)))
   )
)
(defrule R70 
	(food (is 1)(id 5  )(name ?name0)(priorites ?priorites0))
	?n<- (food (id 95  ))
   (food (id 95  )(is ?is_ )(name ?nn)(priorites ?pp))
	=>
   (bind ?pr ?priorites0)
	(if (and (= ?is_ 1) (> ?pr ?pp))
	then
	(modify ?n (priorites ?pr))
   (assert (message (str ?nn)(priorites ?pr)))
   )
	(if (= ?is_ 0)
	then
	(modify ?n (is 1 ))
	(modify ?n (priorites ?pr))
   (assert (message (str ?nn)(priorites ?pr)))
   )
)
(defrule R71 
	(food (is 1)(id 8 )(name ?name0)(priorites ?priorites0))
	(food (is 1)(id 97 )(name ?name1)(priorites ?priorites1))
	(food (is 1)(id 15 )(name ?name2)(priorites ?priorites2))
	(food (is 1)(id 88 )(name ?name3)(priorites ?priorites3))
	?n<- (food (id 98  ))
   (food (id 98  )(is ?is_ )(name ?nn)(priorites ?pp))
	=>
   (bind ?pr ?priorites0)
   (bind ?pr (- (+ ?pr ?priorites1) (* ?pr ?priorites1)))
   (bind ?pr (- (+ ?pr ?priorites2) (* ?pr ?priorites2)))
   (bind ?pr (- (+ ?pr ?priorites3) (* ?pr ?priorites3)))
	(if (and (= ?is_ 1) (> ?pr ?pp))
	then
	(modify ?n (priorites ?pr))
   (assert (message (str ?nn)(priorites ?pr)))
   )
	(if (= ?is_ 0)
	then
	(modify ?n (is 1 ))
	(modify ?n (priorites ?pr))
   (assert (message (str ?nn)(priorites ?pr)))
   )
)
(defrule R72 
	(food (is 1)(id 97 )(name ?name0)(priorites ?priorites0))
	(food (is 1)(id 2 )(name ?name1)(priorites ?priorites1))
	?n<- (food (id 99  ))
   (food (id 99  )(is ?is_ )(name ?nn)(priorites ?pp))
	=>
   (bind ?pr ?priorites0)
   (bind ?pr (- (+ ?pr ?priorites1) (* ?pr ?priorites1)))
	(if (and (= ?is_ 1) (> ?pr ?pp))
	then
	(modify ?n (priorites ?pr))
   (assert (message (str ?nn)(priorites ?pr)))
   )
	(if (= ?is_ 0)
	then
	(modify ?n (is 1 ))
	(modify ?n (priorites ?pr))
   (assert (message (str ?nn)(priorites ?pr)))
   )
)
(defrule R73 
	(food (is 1)(id 85 )(name ?name0)(priorites ?priorites0))
	(food (is 1)(id 11 )(name ?name1)(priorites ?priorites1))
	(food (is 1)(id 12 )(name ?name2)(priorites ?priorites2))
	?n<- (food (id 100  ))
   (food (id 100  )(is ?is_ )(name ?nn)(priorites ?pp))
	=>
   (bind ?pr ?priorites0)
   (bind ?pr (- (+ ?pr ?priorites1) (* ?pr ?priorites1)))
   (bind ?pr (- (+ ?pr ?priorites2) (* ?pr ?priorites2)))
	(if (and (= ?is_ 1) (> ?pr ?pp))
	then
	(modify ?n (priorites ?pr))
   (assert (message (str ?nn)(priorites ?pr)))
   )
	(if (= ?is_ 0)
	then
	(modify ?n (is 1 ))
	(modify ?n (priorites ?pr))
   (assert (message (str ?nn)(priorites ?pr)))
   )
)
(defrule R74 
	(food (is 1)(id 23 )(name ?name0)(priorites ?priorites0))
	(food (is 1)(id 12 )(name ?name1)(priorites ?priorites1))
	?n<- (food (id 101  ))
   (food (id 101  )(is ?is_ )(name ?nn)(priorites ?pp))
	=>
   (bind ?pr ?priorites0)
   (bind ?pr (- (+ ?pr ?priorites1) (* ?pr ?priorites1)))
	(if (and (= ?is_ 1) (> ?pr ?pp))
	then
	(modify ?n (priorites ?pr))
   (assert (message (str ?nn)(priorites ?pr)))
   )
	(if (= ?is_ 0)
	then
	(modify ?n (is 1 ))
	(modify ?n (priorites ?pr))
   (assert (message (str ?nn)(priorites ?pr)))
   )
)
(defrule R75 
	(food (is 1)(id 97 )(name ?name0)(priorites ?priorites0))
	(food (is 1)(id 13 )(name ?name1)(priorites ?priorites1))
	?n<- (food (id 102  ))
   (food (id 102  )(is ?is_ )(name ?nn)(priorites ?pp))
	=>
   (bind ?pr ?priorites0)
   (bind ?pr (- (+ ?pr ?priorites1) (* ?pr ?priorites1)))
	(if (and (= ?is_ 1) (> ?pr ?pp))
	then
	(modify ?n (priorites ?pr))
   (assert (message (str ?nn)(priorites ?pr)))
   )
	(if (= ?is_ 0)
	then
	(modify ?n (is 1 ))
	(modify ?n (priorites ?pr))
   (assert (message (str ?nn)(priorites ?pr)))
   )
)
(defrule R76 
	(food (is 1)(id 12 )(name ?name0)(priorites ?priorites0))
	?n<- (food (id 103 ))
   (food (id 103 )(is ?is_ )(name ?nn)(priorites ?pp))
	=>
   (bind ?pr ?priorites0)
	(if (and (= ?is_ 1) (> ?pr ?pp))
	then
	(modify ?n (priorites ?pr))
   (assert (message (str ?nn)(priorites ?pr)))
   )
	(if (= ?is_ 0)
	then
	(modify ?n (is 1 ))
	(modify ?n (priorites ?pr))
   (assert (message (str ?nn)(priorites ?pr)))
   )
)
(defrule R77 
	(food (is 1)(id 2 )(name ?name0)(priorites ?priorites0))
	(food (is 1)(id 62 )(name ?name1)(priorites ?priorites1))
	(food (is 1)(id 9 )(name ?name2)(priorites ?priorites2))
	(food (is 1)(id 88 )(name ?name3)(priorites ?priorites3))
	(food (is 1)(id 104 )(name ?name4)(priorites ?priorites4))
	(food (is 1)(id 103 )(name ?name5)(priorites ?priorites5))
	?n<- (food (id 105  ))
   (food (id 105  )(is ?is_ )(name ?nn)(priorites ?pp))
	=>
   (bind ?pr ?priorites0)
   (bind ?pr (- (+ ?pr ?priorites1) (* ?pr ?priorites1)))
   (bind ?pr (- (+ ?pr ?priorites2) (* ?pr ?priorites2)))
   (bind ?pr (- (+ ?pr ?priorites3) (* ?pr ?priorites3)))
   (bind ?pr (- (+ ?pr ?priorites4) (* ?pr ?priorites4)))
   (bind ?pr (- (+ ?pr ?priorites5) (* ?pr ?priorites5)))
	(if (and (= ?is_ 1) (> ?pr ?pp))
	then
	(modify ?n (priorites ?pr))
   (assert (message (str ?nn)(priorites ?pr)))
   )
	(if (= ?is_ 0)
	then
	(modify ?n (is 1 ))
	(modify ?n (priorites ?pr))
   (assert (message (str ?nn)(priorites ?pr)))
   )
)
(defrule R78 
	(food (is 1)(id 4 )(name ?name0)(priorites ?priorites0))
	(food (is 1)(id 7 )(name ?name1)(priorites ?priorites1))
	?n<- (food (id 106  ))
   (food (id 106  )(is ?is_ )(name ?nn)(priorites ?pp))
	=>
   (bind ?pr ?priorites0)
   (bind ?pr (- (+ ?pr ?priorites1) (* ?pr ?priorites1)))
	(if (and (= ?is_ 1) (> ?pr ?pp))
	then
	(modify ?n (priorites ?pr))
   (assert (message (str ?nn)(priorites ?pr)))
   )
	(if (= ?is_ 0)
	then
	(modify ?n (is 1 ))
	(modify ?n (priorites ?pr))
   (assert (message (str ?nn)(priorites ?pr)))
   )
)
(defrule R79 
	(food (is 1)(id 12 )(name ?name0)(priorites ?priorites0))
	?n<- (food (id 107  ))
   (food (id 107  )(is ?is_ )(name ?nn)(priorites ?pp))
	=>
   (bind ?pr ?priorites0)
	(if (and (= ?is_ 1) (> ?pr ?pp))
	then
	(modify ?n (priorites ?pr))
   (assert (message (str ?nn)(priorites ?pr)))
   )
	(if (= ?is_ 0)
	then
	(modify ?n (is 1 ))
	(modify ?n (priorites ?pr))
   (assert (message (str ?nn)(priorites ?pr)))
   )
)
(defrule R80 
	(food (is 1)(id 12 )(name ?name0)(priorites ?priorites0))
	?n<- (food (id 109  ))
   (food (id 109  )(is ?is_ )(name ?nn)(priorites ?pp))
	=>
   (bind ?pr ?priorites0)
	(if (and (= ?is_ 1) (> ?pr ?pp))
	then
	(modify ?n (priorites ?pr))
   (assert (message (str ?nn)(priorites ?pr)))
   )
	(if (= ?is_ 0)
	then
	(modify ?n (is 1 ))
	(modify ?n (priorites ?pr))
   (assert (message (str ?nn)(priorites ?pr)))
   )
)
(defrule R81 
	(food (is 1)(id 109 )(name ?name0)(priorites ?priorites0))
	?n<- (food (id 110  ))
   (food (id 110  )(is ?is_ )(name ?nn)(priorites ?pp))
	=>
   (bind ?pr ?priorites0)
	(if (and (= ?is_ 1) (> ?pr ?pp))
	then
	(modify ?n (priorites ?pr))
   (assert (message (str ?nn)(priorites ?pr)))
   )
	(if (= ?is_ 0)
	then
	(modify ?n (is 1 ))
	(modify ?n (priorites ?pr))
   (assert (message (str ?nn)(priorites ?pr)))
   )
)
(defrule R82 
	(food (is 1)(id 13 )(name ?name0)(priorites ?priorites0))
	?n<- (food (id 110  ))
   (food (id 110  )(is ?is_ )(name ?nn)(priorites ?pp))
	=>
   (bind ?pr ?priorites0)
	(if (and (= ?is_ 1) (> ?pr ?pp))
	then
	(modify ?n (priorites ?pr))
   (assert (message (str ?nn)(priorites ?pr)))
   )
	(if (= ?is_ 0)
	then
	(modify ?n (is 1 ))
	(modify ?n (priorites ?pr))
   (assert (message (str ?nn)(priorites ?pr)))
   )
)
(defrule R83 
	(food (is 1)(id 106 )(name ?name0)(priorites ?priorites0))
	(food (is 1)(id 107)(name ?name1)(priorites ?priorites1))
	(food (is 1)(id 110 )(name ?name2)(priorites ?priorites2))
	?n<- (food (id 108  ))
   (food (id 108  )(is ?is_ )(name ?nn)(priorites ?pp))
	=>
   (bind ?pr ?priorites0)
   (bind ?pr (- (+ ?pr ?priorites1) (* ?pr ?priorites1)))
   (bind ?pr (- (+ ?pr ?priorites2) (* ?pr ?priorites2)))
	(if (and (= ?is_ 1) (> ?pr ?pp))
	then
	(modify ?n (priorites ?pr))
   (assert (message (str ?nn)(priorites ?pr)))
   )
	(if (= ?is_ 0)
	then
	(modify ?n (is 1 ))
	(modify ?n (priorites ?pr))
   (assert (message (str ?nn)(priorites ?pr)))
   )
)
(defrule R84 
	(food (is 1)(id 5 )(name ?name0)(priorites ?priorites0))
	(food (is 1)(id 9 )(name ?name1)(priorites ?priorites1))
	?n<- (food (id 111  ))
   (food (id 111  )(is ?is_ )(name ?nn)(priorites ?pp))
	=>
   (bind ?pr ?priorites0)
   (bind ?pr (- (+ ?pr ?priorites1) (* ?pr ?priorites1)))
	(if (and (= ?is_ 1) (> ?pr ?pp))
	then
	(modify ?n (priorites ?pr))
   (assert (message (str ?nn)(priorites ?pr)))
   )
	(if (= ?is_ 0)
	then
	(modify ?n (is 1 ))
	(modify ?n (priorites ?pr))
   (assert (message (str ?nn)(priorites ?pr)))
   )
)
(defrule R85 
	(food (is 1)(id 11 )(name ?name0)(priorites ?priorites0))
	(food (is 1)(id 111 )(name ?name1)(priorites ?priorites1))
	?n<- (food (id 112  ))
   (food (id 112  )(is ?is_ )(name ?nn)(priorites ?pp))
	=>
   (bind ?pr ?priorites0)
   (bind ?pr (- (+ ?pr ?priorites1) (* ?pr ?priorites1)))
	(if (and (= ?is_ 1) (> ?pr ?pp))
	then
	(modify ?n (priorites ?pr))
   (assert (message (str ?nn)(priorites ?pr)))
   )
	(if (= ?is_ 0)
	then
	(modify ?n (is 1 ))
	(modify ?n (priorites ?pr))
   (assert (message (str ?nn)(priorites ?pr)))
   )
)
(defrule R86 
	(food (is 1)(id 107 )(name ?name0)(priorites ?priorites0))
	(food (is 1)(id 111 )(name ?name1)(priorites ?priorites1))
	?n<- (food (id 113  ))
   (food (id 113  )(is ?is_ )(name ?nn)(priorites ?pp))
	=>
   (bind ?pr ?priorites0)
   (bind ?pr (- (+ ?pr ?priorites1) (* ?pr ?priorites1)))
	(if (and (= ?is_ 1) (> ?pr ?pp))
	then
	(modify ?n (priorites ?pr))
   (assert (message (str ?nn)(priorites ?pr)))
   )
	(if (= ?is_ 0)
	then
	(modify ?n (is 1 ))
	(modify ?n (priorites ?pr))
   (assert (message (str ?nn)(priorites ?pr)))
   )
)
(defrule R87 
	(food (is 1)(id 7 )(name ?name0)(priorites ?priorites0))
	(food (is 1)(id 59 )(name ?name1)(priorites ?priorites1))
	(food (is 1)(id 9 )(name ?name2)(priorites ?priorites2))
	?n<- (food (id 114  ))
   (food (id 114  )(is ?is_ )(name ?nn)(priorites ?pp))
	=>
   (bind ?pr ?priorites0)
   (bind ?pr (- (+ ?pr ?priorites1) (* ?pr ?priorites1)))
   (bind ?pr (- (+ ?pr ?priorites2) (* ?pr ?priorites2)))
	(if (and (= ?is_ 1) (> ?pr ?pp))
	then
	(modify ?n (priorites ?pr))
   (assert (message (str ?nn)(priorites ?pr)))
   )
	(if (= ?is_ 0)
	then
	(modify ?n (is 1 ))
	(modify ?n (priorites ?pr))
   (assert (message (str ?nn)(priorites ?pr)))
   )
)
(defrule R88 
	(food (is 1)(id 12 )(name ?name0)(priorites ?priorites0))
	(food (is 1)(id 114 )(name ?name1)(priorites ?priorites1))
	?n<- (food (id 115  ))
   (food (id 115  )(is ?is_ )(name ?nn)(priorites ?pp))
	=>
   (bind ?pr ?priorites0)
   (bind ?pr (- (+ ?pr ?priorites1) (* ?pr ?priorites1)))
	(if (and (= ?is_ 1) (> ?pr ?pp))
	then
	(modify ?n (priorites ?pr))
   (assert (message (str ?nn)(priorites ?pr)))
   )
	(if (= ?is_ 0)
	then
	(modify ?n (is 1 ))
	(modify ?n (priorites ?pr))
   (assert (message (str ?nn)(priorites ?pr)))
   )
)
(defrule R89 
	(food (is 1)(id 12 )(name ?name0)(priorites ?priorites0))
	(food (is 1)(id 106 )(name ?name1)(priorites ?priorites1))
	?n<- (food (id 116  ))
   (food (id 116  )(is ?is_ )(name ?nn)(priorites ?pp))
	=>
   (bind ?pr ?priorites0)
   (bind ?pr (- (+ ?pr ?priorites1) (* ?pr ?priorites1)))
	(if (and (= ?is_ 1) (> ?pr ?pp))
	then
	(modify ?n (priorites ?pr))
   (assert (message (str ?nn)(priorites ?pr)))
   )
	(if (= ?is_ 0)
	then
	(modify ?n (is 1 ))
	(modify ?n (priorites ?pr))
   (assert (message (str ?nn)(priorites ?pr)))
   )
)
(defrule R90 
	(food (is 1)(id 85 )(name ?name0)(priorites ?priorites0))
	(food (is 1)(id 9 )(name ?name1)(priorites ?priorites1))
	?n<- (food (id 117  ))
   (food (id 117  )(is ?is_ )(name ?nn)(priorites ?pp))
	=>
   (bind ?pr ?priorites0)
   (bind ?pr (- (+ ?pr ?priorites1) (* ?pr ?priorites1)))
	(if (and (= ?is_ 1) (> ?pr ?pp))
	then
	(modify ?n (priorites ?pr))
   (assert (message (str ?nn)(priorites ?pr)))
   )
	(if (= ?is_ 0)
	then
	(modify ?n (is 1 ))
	(modify ?n (priorites ?pr))
   (assert (message (str ?nn)(priorites ?pr)))
   )
)
(defrule R91 
	(food (is 1)(id 117 )(name ?name0)(priorites ?priorites0))
	(food (is 1)(id 111  )(name ?name1)(priorites ?priorites1))
	?n<- (food (id 118  ))
   (food (id 118  )(is ?is_ )(name ?nn)(priorites ?pp))
	=>
   (bind ?pr ?priorites0)
   (bind ?pr (- (+ ?pr ?priorites1) (* ?pr ?priorites1)))
	(if (and (= ?is_ 1) (> ?pr ?pp))
	then
	(modify ?n (priorites ?pr))
   (assert (message (str ?nn)(priorites ?pr)))
   )
	(if (= ?is_ 0)
	then
	(modify ?n (is 1 ))
	(modify ?n (priorites ?pr))
   (assert (message (str ?nn)(priorites ?pr)))
   )
)
(defrule R92 
	(food (is 1)(id 4 )(name ?name0)(priorites ?priorites0))
	(food (is 1)(id 7 )(name ?name1)(priorites ?priorites1))
	(food (is 1)(id 59 )(name ?name2)(priorites ?priorites2))
	?n<- (food (id 119  ))
   (food (id 119  )(is ?is_ )(name ?nn)(priorites ?pp))
	=>
   (bind ?pr ?priorites0)
   (bind ?pr (- (+ ?pr ?priorites1) (* ?pr ?priorites1)))
   (bind ?pr (- (+ ?pr ?priorites2) (* ?pr ?priorites2)))
	(if (and (= ?is_ 1) (> ?pr ?pp))
	then
	(modify ?n (priorites ?pr))
   (assert (message (str ?nn)(priorites ?pr)))
   )
	(if (= ?is_ 0)
	then
	(modify ?n (is 1 ))
	(modify ?n (priorites ?pr))
   (assert (message (str ?nn)(priorites ?pr)))
   )
)
(defrule R93 
	(food (is 1)(id 119 )(name ?name0)(priorites ?priorites0))
	(food (is 1)(id 114 )(name ?name1)(priorites ?priorites1))
	?n<- (food (id 120  ))
   (food (id 120  )(is ?is_ )(name ?nn)(priorites ?pp))
	=>
   (bind ?pr ?priorites0)
   (bind ?pr (- (+ ?pr ?priorites1) (* ?pr ?priorites1)))
	(if (and (= ?is_ 1) (> ?pr ?pp))
	then
	(modify ?n (priorites ?pr))
   (assert (message (str ?nn)(priorites ?pr)))
   )
	(if (= ?is_ 0)
	then
	(modify ?n (is 1 ))
	(modify ?n (priorites ?pr))
   (assert (message (str ?nn)(priorites ?pr)))
   )
)
(defrule R94 
	(food (is 1)(id 119 )(name ?name0)(priorites ?priorites0))
	(food (is 1)(id 106 )(name ?name1)(priorites ?priorites1))
	?n<- (food (id 121  ))
   (food (id 121  )(is ?is_ )(name ?nn)(priorites ?pp))
	=>
   (bind ?pr ?priorites0)
   (bind ?pr (- (+ ?pr ?priorites1) (* ?pr ?priorites1)))
	(if (and (= ?is_ 1) (> ?pr ?pp))
	then
	(modify ?n (priorites ?pr))
   (assert (message (str ?nn)(priorites ?pr)))
   )
	(if (= ?is_ 0)
	then
	(modify ?n (is 1 ))
	(modify ?n (priorites ?pr))
   (assert (message (str ?nn)(priorites ?pr)))
   )
)
(defrule R95 
	(food (is 1)(id 119 )(name ?name0)(priorites ?priorites0))
	(food (is 1)(id 117 )(name ?name1)(priorites ?priorites1))
	?n<- (food (id 122  ))
   (food (id 122  )(is ?is_ )(name ?nn)(priorites ?pp))
	=>
   (bind ?pr ?priorites0)
   (bind ?pr (- (+ ?pr ?priorites1) (* ?pr ?priorites1)))
	(if (and (= ?is_ 1) (> ?pr ?pp))
	then
	(modify ?n (priorites ?pr))
   (assert (message (str ?nn)(priorites ?pr)))
   )
	(if (= ?is_ 0)
	then
	(modify ?n (is 1 ))
	(modify ?n (priorites ?pr))
   (assert (message (str ?nn)(priorites ?pr)))
   )
)
(defrule R96 
	(food (is 1)(id 23 )(name ?name0)(priorites ?priorites0))
	(food (is 1)(id 12 )(name ?name1)(priorites ?priorites1))
	?n<- (food (id 101  ))
   (food (id 101  )(is ?is_ )(name ?nn)(priorites ?pp))
	=>
   (bind ?pr ?priorites0)
   (bind ?pr (- (+ ?pr ?priorites1) (* ?pr ?priorites1)))
	(if (and (= ?is_ 1) (> ?pr ?pp))
	then
	(modify ?n (priorites ?pr))
   (assert (message (str ?nn)(priorites ?pr)))
   )
	(if (= ?is_ 0)
	then
	(modify ?n (is 1 ))
	(modify ?n (priorites ?pr))
   (assert (message (str ?nn)(priorites ?pr)))
   )
)
(defrule R97 
	(food (is 1)(id 97 )(name ?name0)(priorites ?priorites0))
	(food (is 1)(id 13 )(name ?name1)(priorites ?priorites1))
	?n<- (food (id 102  ))
   (food (id 102  )(is ?is_ )(name ?nn)(priorites ?pp))
	=>
   (bind ?pr ?priorites0)
   (bind ?pr (- (+ ?pr ?priorites1) (* ?pr ?priorites1)))
	(if (and (= ?is_ 1) (> ?pr ?pp))
	then
	(modify ?n (priorites ?pr))
   (assert (message (str ?nn)(priorites ?pr)))
   )
	(if (= ?is_ 0)
	then
	(modify ?n (is 1 ))
	(modify ?n (priorites ?pr))
   (assert (message (str ?nn)(priorites ?pr)))
   )
)
(defrule R98 
	(food (is 1)(id 44 )(name ?name0)(priorites ?priorites0))
	(food (is 1)(id 61 )(name ?name1)(priorites ?priorites1))
	?n<- (food (id 74  ))
   (food (id 74  )(is ?is_ )(name ?nn)(priorites ?pp))
	=>
   (bind ?pr ?priorites0)
   (bind ?pr (- (+ ?pr ?priorites1) (* ?pr ?priorites1)))
	(if (and (= ?is_ 1) (> ?pr ?pp))
	then
	(modify ?n (priorites ?pr))
   (assert (message (str ?nn)(priorites ?pr)))
   )
	(if (= ?is_ 0)
	then
	(modify ?n (is 1 ))
	(modify ?n (priorites ?pr))
   (assert (message (str ?nn)(priorites ?pr)))
   )
)
(defrule R99 
	(food (is 1)(id 41 )(name ?name0)(priorites ?priorites0))
	(food (is 1)(id 39 )(name ?name1)(priorites ?priorites1))
	?n<- (food (id 40  ))
   (food (id 40  )(is ?is_ )(name ?nn)(priorites ?pp))
	=>
   (bind ?pr ?priorites0)
   (bind ?pr (- (+ ?pr ?priorites1) (* ?pr ?priorites1)))
	(if (and (= ?is_ 1) (> ?pr ?pp))
	then
	(modify ?n (priorites ?pr))
   (assert (message (str ?nn)(priorites ?pr)))
   )
	(if (= ?is_ 0)
	then
	(modify ?n (is 1 ))
	(modify ?n (priorites ?pr))
   (assert (message (str ?nn)(priorites ?pr)))
   )
)
(defrule R100 
	(food (is 1)(id 44 )(name ?name0)(priorites ?priorites0))
	(food (is 1)(id 12 )(name ?name1)(priorites ?priorites1))
	?n<- (food (id 123  ))
   (food (id 123  )(is ?is_ )(name ?nn)(priorites ?pp))
	=>
   (bind ?pr ?priorites0)
   (bind ?pr (- (+ ?pr ?priorites1) (* ?pr ?priorites1)))
	(if (and (= ?is_ 1) (> ?pr ?pp))
	then
	(modify ?n (priorites ?pr))
   (assert (message (str ?nn)(priorites ?pr)))
   )
	(if (= ?is_ 0)
	then
	(modify ?n (is 1 ))
	(modify ?n (priorites ?pr))
   (assert (message (str ?nn)(priorites ?pr)))
   )
)
(defrule R101 
	(food (is 1)(id 103 )(name ?name0)(priorites ?priorites0))
	(food (is 1)(id 17 )(name ?name1)(priorites ?priorites1))
	?n<- (food (id 124  ))
   (food (id 124  )(is ?is_ )(name ?nn)(priorites ?pp))
	=>
   (bind ?pr ?priorites0)
   (bind ?pr (- (+ ?pr ?priorites1) (* ?pr ?priorites1)))
	(if (and (= ?is_ 1) (> ?pr ?pp))
	then
	(modify ?n (priorites ?pr))
   (assert (message (str ?nn)(priorites ?pr)))
   )
	(if (= ?is_ 0)
	then
	(modify ?n (is 1 ))
	(modify ?n (priorites ?pr))
   (assert (message (str ?nn)(priorites ?pr)))
   )
)
(defrule R102 
	(food (is 1)(id 119 )(name ?name0)(priorites ?priorites0))
	(food (is 1)(id 11 )(name ?name1)(priorites ?priorites1))
	?n<- (food (id 125  ))
   (food (id 125  )(is ?is_ )(name ?nn)(priorites ?pp))
	=>
   (bind ?pr ?priorites0)
   (bind ?pr (- (+ ?pr ?priorites1) (* ?pr ?priorites1)))
	(if (and (= ?is_ 1) (> ?pr ?pp))
	then
	(modify ?n (priorites ?pr))
   (assert (message (str ?nn)(priorites ?pr)))
   )
	(if (= ?is_ 0)
	then
	(modify ?n (is 1 ))
	(modify ?n (priorites ?pr))
   (assert (message (str ?nn)(priorites ?pr)))
   )
)
(defrule R103 
	(food (is 1)(id 4 )(name ?name0)(priorites ?priorites0))
	?n<- (food (id 32  ))
   (food (id 32  )(is ?is_ )(name ?nn)(priorites ?pp))
	=>
   (bind ?pr ?priorites0)
	(if (and (= ?is_ 1) (> ?pr ?pp))
	then
	(modify ?n (priorites ?pr))
   (assert (message (str ?nn)(priorites ?pr)))
   )
	(if (= ?is_ 0)
	then
	(modify ?n (is 1 ))
	(modify ?n (priorites ?pr))
   (assert (message (str ?nn)(priorites ?pr)))
   )
)
